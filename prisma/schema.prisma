// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

enum TransactionType {
  DEPOSIT
  WITHDRAWAL
}

enum AccountType {
  BANK
  CREDIT_CARD
  INVESTMENT
  TAX
  TDS
}

enum UserRoles {
  ADMIN
  USER
}

enum CurrencyCode {
  INR
  USD
  EUR
  GBP
  AUD
  CAD
  NZD
  CHF
  JPY
}

model User {
  id           String        @id @default(cuid())
  name         String
  username     String        @unique
  email        String        @unique
  role         UserRoles     @default(USER)
  passwordHash String
  accounts     Account[]
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())
  createdBy    String        @default("0")
  // creator      User          @relation("Creater", fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction)
  // created      User[]        @relation("Creater")
}

model Account {
  id           String        @id @default(cuid())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())
  name         String
  type         AccountType   @default(BANK)
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
  currencyCode CurrencyCode  @default(INR)
}

model TransactionCategory {
  id           String        @id @default(cuid())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())
  name         String        @unique
  transactions Transaction[]
}

model Transaction {
  id              String              @id @default(cuid())
  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @default(now())
  amount          Float
  type            TransactionType     @default(DEPOSIT)
  referenceId     String
  description     String              @default("")
  transactionDate DateTime
  accountId       String
  userId          String
  categoryId      String
  note            String?
  recipt          String?
  account         Account             @relation(fields: [accountId], references: [id])
  user            User                @relation(fields: [userId], references: [id])
  category        TransactionCategory @relation(fields: [categoryId], references: [id])
}

model Rules {
  id          String               @id @default(cuid())
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @default(now())
  name        String               @unique
  description String               @default("")
  conditions  TransactionCondition
  column      TransactionColumns
  value       String
}

enum TransactionCondition {
  CONTAINS
  NOT_CONTAINS
  EQUALS
  NOT_EQUALS
  GREATER_THAN
  LESS_THAN
  GREATER_THAN_OR_EQUAL
  LESS_THAN_OR_EQUAL

}

enum TransactionColumns {
  AMOUNT
  TYPE
  REFERENCE_ID
  DESCRIPTION
  TRANSACTION_DATE
}
